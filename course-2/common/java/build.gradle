

plugins {
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
    id 'maven-publish'
}

gradle.allprojects {
    repositories.all {
        if (it instanceof MavenArtifactRepository && it.url.toString().startsWith("http://")) {
            it.allowInsecureProtocol = true
        }
    }
}
group = 'org.yann'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '21'



dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    
    // CVE-2022-42889 TextShell
    implementation 'org.apache.commons:commons-text:1.9'
    
    // CVE-2020-1938 GhostCat
    implementation 'org.apache.tomcat.embed:tomcat-embed-core:10.1.13'
    
    // CVE-2021-43859
    implementation 'com.thoughtworks.xstream:xstream:1.4.20'
    
    // CVE-2022-38750
    implementation 'org.yaml:snakeyaml:1.30'
    
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}




publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

// Optional tasks for JFrog integration
// task buildInfo(type: Exec) {
//     description 'Collects and publishes build info'
//     commandLine 'jf', 'rt', 'bp', "${buildName}", "${buildNumber}"
// }

// task buildScan(type: Exec) {
//     description 'Scans the build'
//     commandLine 'jf', 'rt', 'bs', "${buildName}", "${buildNumber}"
// } 